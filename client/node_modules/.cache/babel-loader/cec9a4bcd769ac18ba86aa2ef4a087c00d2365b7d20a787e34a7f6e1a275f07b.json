{"ast":null,"code":"var _jsxFileName = \"F:\\\\Projects\\\\eVault_sih\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Upload from \"./artifacts/contracts/Upload.sol/Upload.json\";\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport FileUpload from \"./components/FileUpload\";\nimport Display from \"./components/Display\";\nimport Modal from \"./components/Modal\";\nimport logo from './logo_ccexpress.png';\nimport icon from './shark_icon.png';\nimport \"./App.css\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(\"\");\n  const [contract, setContract] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  useEffect(() => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const loadProvider = async () => {\n      if (provider) {\n        window.ethereum.on(\"chainChanged\", () => {\n          window.location.reload();\n        });\n        window.ethereum.on(\"accountsChanged\", () => {\n          window.location.reload();\n        });\n        await provider.send(\"eth_requestAccounts\", []);\n        const signer = provider.getSigner();\n        const address = await signer.getAddress();\n        setAccount(address);\n        let contractAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n        const contract = new ethers.Contract(contractAddress, Upload.abi, signer);\n        //console.log(contract);\n        setContract(contract);\n        setProvider(provider);\n      } else {\n        console.error(\"Metamask is not installed\");\n      }\n    };\n    provider && loadProvider();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!modalOpen && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"share\",\n      onClick: () => setModalOpen(true),\n      children: \"Share\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      setModalOpen: setModalOpen,\n      contract: contract\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"BlockVault IPFS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: \"white\"\n        },\n        children: \"(A blockchain based secure File System)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"bg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"bg bg2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"bg bg3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"white\"\n        },\n        children: [\"IPFS Address : \", account ? account : \"Not connected\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n        account: account,\n        provider: provider,\n        contract: contract\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Display, {\n        contract: contract,\n        account: account\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"yGCxXQ87YH7dBPtrsE7SNVrz99c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Upload","useState","useEffect","ethers","FileUpload","Display","Modal","logo","icon","App","account","setAccount","contract","setContract","provider","setProvider","modalOpen","setModalOpen","providers","Web3Provider","window","ethereum","loadProvider","on","location","reload","send","signer","getSigner","address","getAddress","contractAddress","Contract","abi","console","error","color"],"sources":["F:/Projects/eVault_sih/client/src/App.js"],"sourcesContent":["import Upload from \"./artifacts/contracts/Upload.sol/Upload.json\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport FileUpload from \"./components/FileUpload\";\r\nimport Display from \"./components/Display\";\r\nimport Modal from \"./components/Modal\";\r\nimport logo from './logo_ccexpress.png';\r\nimport icon from './shark_icon.png'\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [account, setAccount] = useState(\"\");\r\n  const [contract, setContract] = useState(null);\r\n  const [provider, setProvider] = useState(null);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n\r\n    const loadProvider = async () => {\r\n      if (provider) {\r\n        window.ethereum.on(\"chainChanged\", () => {\r\n          window.location.reload();\r\n        });\r\n\r\n        window.ethereum.on(\"accountsChanged\", () => {\r\n          window.location.reload();\r\n        });\r\n        await provider.send(\"eth_requestAccounts\", []);\r\n        const signer = provider.getSigner();\r\n        const address = await signer.getAddress();\r\n        setAccount(address);\r\n        let contractAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\r\n\r\n        const contract = new ethers.Contract(\r\n          contractAddress,\r\n          Upload.abi,\r\n          signer\r\n        );\r\n        //console.log(contract);\r\n        setContract(contract);\r\n        setProvider(provider);\r\n      } else {\r\n        console.error(\"Metamask is not installed\");\r\n      }\r\n    };\r\n    provider && loadProvider();\r\n  }, []);\r\n  return (\r\n\r\n    \r\n\r\n    <>\r\n\r\n      \r\n\r\n      {!modalOpen && (\r\n        <button className=\"share\" onClick={() => setModalOpen(true)}>\r\n          Share\r\n        </button>\r\n        \r\n      )}\r\n      \r\n\r\n      {modalOpen && (\r\n        <Modal setModalOpen={setModalOpen} contract={contract}></Modal>\r\n      )}\r\n      {/* <a href=\"https://www.iiitbh.ac.in/\" target=\"_blank\" class=\"intro-logo-parent\"><img class=\"intro-logo\" src={logo} alt=\"iiitbh logo\"/></a> */}\r\n      <div className=\"App\">\r\n      {/* <button className=\"anu anu1\">\r\n          Lawyer\r\n      </button>\r\n      <button className=\"anu anu2\">\r\n          Judge\r\n      </button>\r\n      <button className=\"anu anu3\">\r\n          Client\r\n      </button>\r\n      <button className=\"anu anu4\">\r\n          Other\r\n      </button> */}\r\n        <h1 style={{ color: \"red\" }}>BlockVault IPFS</h1>\r\n        <h2 style={{ color: \"white\" }}>(A blockchain based secure File System)</h2>\r\n        <div class=\"bg\"></div>\r\n        <div class=\"bg bg2\"></div>\r\n        <div class=\"bg bg3\"></div>\r\n\r\n        <p style={{ color: \"white\" } }>\r\n          IPFS Address : {account ? account : \"Not connected\"}\r\n        </p>\r\n        <FileUpload\r\n          account={account}\r\n          provider={provider}\r\n          contract={contract}\r\n        ></FileUpload>\r\n        <Display contract={contract} account={account}></Display>\r\n        {/* <a class=\"icon_parent\"><img class=\"icon\" src={icon} alt=\"icon\"/></a> */}\r\n      </div>\r\n      \r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}